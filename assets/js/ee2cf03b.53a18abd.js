"use strict";(self.webpackChunksite_new=self.webpackChunksite_new||[]).push([[464],{1688:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=t(7624),a=t(2172);const i={title:"Interoperability with PHP",sidebar_position:3},o=void 0,s={id:"interop",title:"Interoperability with PHP",description:"Currently, Scala.php allows running native PHP code from Scala, but not the other way around.",source:"@site/docs/interop.md",sourceDirName:".",slug:"/interop",permalink:"/docs/interop",draft:!1,unlisted:!1,editUrl:"https://github.com/scala-php/scala-php/tree/main/modules/site/docs/interop.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Interoperability with PHP",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Examples",permalink:"/docs/examples"},next:{title:"Configuration",permalink:"/docs/configuration"}},l={},p=[];function c(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,a.M)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Currently, Scala.php allows running native PHP code from Scala, but not the other way around."}),"\n",(0,r.jsxs)(n.p,{children:["In order to call a PHP-defined function, you have to know its signature. For example, ",(0,r.jsx)(n.a,{href:"https://www.php.net/manual/en/function.explode",children:(0,r.jsx)(n.code,{children:"explode"})}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"explode(string $separator, string $string, int $limit = PHP_INT_MAX): array\n"})}),"\n",(0,r.jsx)(n.p,{children:"For the example's sake, let's assume we're only interested in providing the first two parameters."}),"\n",(0,r.jsx)(n.p,{children:"The Scala signature you have to define would be:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-scala",children:"import org.scalaphp.php\n\n@php.native\ndef explode(\n  separator: String,\n  string: String,\n): Array[String] = php.native\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:["Currently, ",(0,r.jsx)(n.a,{href:"https://www.php.net/manual/en/functions.arguments.php#functions.named-arguments",children:"PHP 8's named arguments"})," aren't supported. Scala's named parameters still work - just make sure to match the order of arguments when defining the signature!"]})}),"\n",(0,r.jsx)(n.p,{children:"Having defined the signature, we can call the function:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-scala",children:'explode(string = "foo bar", separator = " ") // Array("foo", "bar")\n'})})]})}function d(e={}){const{wrapper:n}={...(0,a.M)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},2172:(e,n,t)=>{t.d(n,{I:()=>s,M:()=>o});var r=t(1504);const a={},i=r.createContext(a);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);